$screen-desktop-breakpoint: 960px;
$screen-desktop-max-width: 1440px;

$sections-padding: 100px;
$section-paragraph-padding: 80px;
$regular-paragraph-padding: 40px;
$sections-padding-mobile: 50px;
$section-paragraph-padding-mobile: 40px;
$regular-paragraph-padding-mobile: 20px;

@mixin desktop {
  @media (min-width: #{$screen-desktop-breakpoint}) {
      @content;
  }
}

@mixin mobile {
  @media (max-width: #{$screen-desktop-breakpoint - 1}) {
      @content;
  }
}

$colors : (
  harmanBlue: #0073AE,
  harmanBlue2: #00A4E4,
  harmanBlue3: #71D6E0,
  harmanBlue4: #003D4C,
  harmanDarkBlue: #014060,
  white: #FFFFFF,
  backgrdnGray: #EFF0F1,
  footerGray: #2A292A,
  divider: #E5E4E4,
  h1Gray: #808284,
  textGray: #4A4A4A
);

@function color($colorName) {
  @if (map_has_key($colors, $colorName)) {
    @return map-get($colors, $colorName);
  } @else {
    @error "Color is not defined: " + $colorName;
  }
}

@function convert($value, $currentUnit, $convertUnit) {
  @if $currentUnit == px {

    @if $convertUnit == ems {
      @return $value / 16 + 0em;
    }
    @else if $convertUnit == percent {
      @return percentage($value / 16);
    }

  } @else if $currentUnit == ems {

    @if $convertUnit == px{
      @return $value * 16 + 0px;
    }
    @else if $convertUnit == percent {
      @return percentage($value);
    }

  } @else if $currentUnit == percent {

    @if $convertUnit == px {
      @return $value * 16 / 100 + 0px;
    }
    @else if $convertUnit == ems {
      @return $value / 100 + 0em;
    }

  } @else if $currentUnit == pts {

    @if $convertUnit == px {
      @return $value * 1.3333 +0px;
    }
    @else if $convertUnit == ems {
      @return $value / 12 + 0em;
    }
    @else if $convertUnit == percent {
      @return percentage($value / 12)
    }
  }
}

@function pt2px($value) {
  // Probably pt means px in desing for mobile. Won`t convert for now
  @return $value + 0px;
  // @return convert($value, pts, px);
}